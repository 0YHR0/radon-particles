tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  targetNamespace: "radon.blueprints.optimization"
topology_template:
  node_templates:
    OpenWorkload_0:
      type: radon.nodes.abstract.workload.OpenWorkload
      metadata:
        x: "355"
        y: "126"
        displayName: "OpenWorkload"
      properties:
        interarrival_time:
          mean: 0.2
        entries:
          start:
            activities:
              a1:
                service_time:
                  mean: 0.001
                bound_to_entry: true
                request_pattern: "stochastic"
      requirements:
        - endpoint:
            node: AwsApiGateway_0
            relationship: con_ConnectsTo_5
            capability: api_endpoint
    AwsLambdaFunction_1:
      type: radon.nodes.aws.AwsLambdaFunction
      metadata:
        x: "894"
        y: "207"
        displayName: "GetTodoItem"
      properties:
        handler: "get.handler"
        entries:
          execute:
            activities:
              a1:
                service_time:
                  mean: 0.047
                bound_to_entry: true
                request_pattern: "deterministic"
                replies_to_entry: true
        memory: 128
        name: "get-item"
        runtime: "nodejs12.x"
        alias: "dev"
        statement_id: "get-stmt"
        zip_file: { get_artifact: [ SELF, get_item ] }
        timeout: 300
        env_vars:
          TODOS_TABLE: "items"
      requirements:
        - endpoint:
            node: AwsDynamoDBTable_0
            relationship: con_ConnectsTo_1
            capability: database_endpoint
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_3
            capability: host
      artifacts:
        get_item:
          type: radon.artifacts.archive.Zip
          file: get.zip
    AwsLambdaFunction_2:
      type: radon.nodes.aws.AwsLambdaFunction
      metadata:
        x: "893"
        y: "298"
        displayName: "CreateTodoItem"
      properties:
        handler: "create.handler"
        entries:
          execute:
            activities:
              a1:
                service_time:
                  mean: 0.044
                bound_to_entry: true
                request_pattern: "deterministic"
                replies_to_entry: true
        memory: 128
        name: "create-item"
        runtime: "nodejs12.x"
        alias: "dev"
        statement_id: "create-stmt"
        zip_file: { get_artifact: [ SELF, create_item ] }
        timeout: 300
        env_vars:
          TODOS_TABLE: "items"
      requirements:
        - endpoint:
            node: AwsDynamoDBTable_0
            relationship: con_ConnectsTo_2
            capability: database_endpoint
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_4
            capability: host
      artifacts:
        create_item:
          type: radon.artifacts.archive.Zip
          file: create.zip
    AwsDynamoDBTable_0:
      type: radon.nodes.aws.AwsDynamoDBTable
      metadata:
        x: "1514"
        y: "301"
        displayName: "ItemsTable"
      properties:
        hash_key_name: "id"
        read_capacity: 1
        entries:
          get:
            activities:
              a1:
                service_time:
                  mean: 0.001
                bound_to_entry: true
                replies_to_entry: true
          scan:
            activities:
              a1:
                service_time:
                  mean: 0.003
                bound_to_entry: true
                replies_to_entry: true
          update:
            activities:
              a1:
                service_time:
                  mean: 0.006
                bound_to_entry: true
                replies_to_entry: true
          delete:
            activities:
              a1:
                service_time:
                  mean: 0.001
                bound_to_entry: true
                replies_to_entry: true
          put:
            activities:
              a1:
                service_time:
                  mean: 0.004
                bound_to_entry: true
                replies_to_entry: true
        name: "items"
        write_capacity: 1
        hash_key_type: "STRING"
      requirements:
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_0
            capability: host
    AwsLambdaFunction_0:
      type: radon.nodes.aws.AwsLambdaFunction
      metadata:
        x: "894"
        y: "110"
        displayName: "ListTodoItems"
      properties:
        handler: "list.handler"
        entries:
          execute:
            activities:
              a1:
                service_time:
                  mean: 0.046
                bound_to_entry: true
                request_pattern: "deterministic"
                replies_to_entry: true
        memory: 128
        name: "list-items"
        runtime: "nodejs12.x"
        alias: "dev"
        statement_id: "list-stmt"
        zip_file: { get_artifact: [ SELF, list_items ] }
        timeout: 300
        env_vars:
          TODOS_TABLE: "items"
      requirements:
        - endpoint:
            node: AwsDynamoDBTable_0
            relationship: con_ConnectsTo_0
            capability: database_endpoint
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_1
            capability: host
      artifacts:
        list_items:
          type: radon.artifacts.archive.Zip
          file: list.zip
    AwsLambdaFunction_3:
      type: radon.nodes.aws.AwsLambdaFunction
      metadata:
        x: "888"
        y: "397"
        displayName: "UpdateTodoItem"
      properties:
        handler: "update.handler"
        entries:
          execute:
            activities:
              a1:
                service_time:
                  mean: 0.042
                bound_to_entry: true
                request_pattern: "deterministic"
                replies_to_entry: true
        memory: 128
        name: "update-item"
        runtime: "nodejs12.x"
        alias: "dev"
        statement_id: "update-stmt"
        zip_file: { get_artifact: [ SELF, update_item ] }
        timeout: 300
        env_vars:
          TODOS_TABLE: "items"
      requirements:
        - endpoint:
            node: AwsDynamoDBTable_0
            relationship: con_ConnectsTo_3
            capability: database_endpoint
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_5
            capability: host
      artifacts:
        update_item:
          type: radon.artifacts.archive.Zip
          file: update.zip
    AwsPlatform_0:
      type: radon.nodes.aws.AwsPlatform
      metadata:
        x: "549"
        y: "589"
        displayName: "AwsPlatform"
      properties:
        name: "AWS"
        region: "eu-central-1"
    AwsLambdaFunction_4:
      type: radon.nodes.aws.AwsLambdaFunction
      metadata:
        x: "888"
        y: "499"
        displayName: "DeleteTodoItem"
      properties:
        handler: "delete.handler"
        entries:
          execute:
            activities:
              a1:
                service_time:
                  mean: 0.052
                bound_to_entry: true
                request_pattern: "deterministic"
                replies_to_entry: true
        memory: 128
        name: "delete-item"
        runtime: "nodejs12.x"
        alias: "dev"
        statement_id: "delete-stmt"
        zip_file: { get_artifact: [ SELF, delete_item ] }
        timeout: 300
        env_vars:
          TODOS_TABLE: "items"
      requirements:
        - endpoint:
            node: AwsDynamoDBTable_0
            relationship: con_ConnectsTo_4
            capability: database_endpoint
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_6
            capability: host
      artifacts:
        delete_item:
          type: radon.artifacts.archive.Zip
          file: delete.zip
    AwsApiGateway_0:
      type: radon.nodes.aws.AwsApiGateway
      metadata:
        x: "355"
        y: "300"
        displayName: "AwsApiGateway"
      properties:
        entries:
          get:
            activities:
              a1:
                service_time:
                  mean: 0.111
                bound_to_entry: true
                request_pattern: "deterministic"
                replies_to_entry: true
          update:
            activities:
              a1:
                service_time:
                  mean: 0.114
                bound_to_entry: true
                request_pattern: "deterministic"
                replies_to_entry: true
          create:
            activities:
              a1:
                service_time:
                  mean: 0.112
                bound_to_entry: true
                request_pattern: "deterministic"
                replies_to_entry: true
          list:
            activities:
              a1:
                service_time:
                  mean: 0.125
                bound_to_entry: true
                request_pattern: "deterministic"
                replies_to_entry: true
          delete:
            activities:
              a1:
                service_time:
                  mean: 0.109
                bound_to_entry: true
                request_pattern: "deterministic"
                replies_to_entry: true
        name: "ServerlessToDoListAPI"
        api_version: "1.0.0"
        api_description: "a simple serverless API example"
      requirements:
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_2
            capability: host
        - invoker:
            node: AwsLambdaFunction_0
            relationship: con_AwsApiGatewayTriggers_0
            capability: invocable
        - invoker:
            node: AwsLambdaFunction_1
            relationship: con_AwsApiGatewayTriggers_1
            capability: invocable
        - invoker:
            node: AwsLambdaFunction_2
            relationship: con_AwsApiGatewayTriggers_2
            capability: invocable
        - invoker:
            node: AwsLambdaFunction_3
            relationship: con_AwsApiGatewayTriggers_3
            capability: invocable
        - invoker:
            node: AwsLambdaFunction_4
            relationship: con_AwsApiGatewayTriggers_4
            capability: invocable
  relationship_templates:
    con_HostedOn_2:
      type: tosca.relationships.HostedOn
    con_HostedOn_3:
      type: tosca.relationships.HostedOn
    con_HostedOn_0:
      type: tosca.relationships.HostedOn
    con_HostedOn_1:
      type: tosca.relationships.HostedOn
    con_HostedOn_6:
      type: tosca.relationships.HostedOn
    con_HostedOn_4:
      type: tosca.relationships.HostedOn
    con_HostedOn_5:
      type: tosca.relationships.HostedOn
    con_ConnectsTo_2:
      type: radon.relationships.ConnectsTo
      properties:
        interactions:
          - number_of_requests: 1.0
            source_activity: "execute.a1"
            target_entry: "put"
            type: "synchronous"
    con_ConnectsTo_3:
      type: radon.relationships.ConnectsTo
      properties:
        interactions:
          - number_of_requests: 1.0
            source_activity: "execute.a1"
            target_entry: "update"
            type: "synchronous"
    con_ConnectsTo_4:
      type: radon.relationships.ConnectsTo
      properties:
        interactions:
          - number_of_requests: 1.0
            source_activity: "execute.a1"
            target_entry: "delete"
            type: "synchronous"
    con_ConnectsTo_5:
      type: radon.relationships.ConnectsTo
      properties:
        interactions:
          - number_of_requests: 0.2
            source_activity: "start.a1"
            target_entry: "list"
            type: "synchronous"
          - number_of_requests: 0.2
            source_activity: "start.a1"
            target_entry: "get"
            type: "synchronous"
          - number_of_requests: 0.2
            source_activity: "start.a1"
            target_entry: "create"
            type: "synchronous"
          - number_of_requests: 0.2
            source_activity: "start.a1"
            target_entry: "update"
            type: "synchronous"
          - number_of_requests: 0.2
            source_activity: "start.a1"
            target_entry: "delete"
            type: "synchronous"
    con_AwsApiGatewayTriggers_4:
      type: radon.relationships.aws.AwsApiGatewayTriggers
      properties:
        endpoint: "/todos/{id}"
        http_methods: "delete"
        interactions:
          - number_of_requests: 1.0
            source_activity: "delete.a1"
            target_entry: "execute"
            type: "synchronous"
    con_AwsApiGatewayTriggers_3:
      type: radon.relationships.aws.AwsApiGatewayTriggers
      properties:
        endpoint: "/todos/{id}"
        http_methods: "put"
        interactions:
          - number_of_requests: 1.0
            source_activity: "update.a1"
            target_entry: "execute"
            type: "synchronous"
    con_ConnectsTo_0:
      type: radon.relationships.ConnectsTo
      properties:
        interactions:
          - number_of_requests: 1.0
            source_activity: "execute.a1"
            target_entry: "scan"
            type: "synchronous"
    con_AwsApiGatewayTriggers_2:
      type: radon.relationships.aws.AwsApiGatewayTriggers
      properties:
        endpoint: "/todos"
        http_methods: "post"
        interactions:
          - number_of_requests: 1.0
            source_activity: "create.a1"
            target_entry: "execute"
            type: "synchronous"
    con_ConnectsTo_1:
      type: radon.relationships.ConnectsTo
      properties:
        interactions:
          - number_of_requests: 1.0
            source_activity: "execute.a1"
            target_entry: "get"
            type: "synchronous"
    con_AwsApiGatewayTriggers_1:
      type: radon.relationships.aws.AwsApiGatewayTriggers
      properties:
        endpoint: "/todos/{id}"
        http_methods: "get"
        interactions:
          - number_of_requests: 1.0
            source_activity: "get.a1"
            target_entry: "execute"
            type: "synchronous"
    con_AwsApiGatewayTriggers_0:
      type: radon.relationships.aws.AwsApiGatewayTriggers
      properties:
        endpoint: "/todos"
        http_methods: "get"
        interactions:
          - number_of_requests: 1.0
            source_activity: "list.a1"
            target_entry: "execute"
            type: "synchronous"
  policies:
    - MeanResponseTime_0:
        type: radon.policies.performance.MeanResponseTime
        properties:
          upper_bound: 0.2
        targets: [ AwsApiGateway_0 ]
